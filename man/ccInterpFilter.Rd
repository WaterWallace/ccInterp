% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ccInterpFilter.R
\name{ccInterpFilter}
\alias{ccInterpFilter}
\title{Combined Cumulative Interpolation Filter}
\usage{
ccInterpFilter(
  ts,
  hours = 24,
  discardbelowzero = FALSE,
  centred = FALSE,
  type = "spinterp"
)
}
\arguments{
\item{ts}{dataframe of posixct time (time in seconds) and an instantaneous value (per second i.e. cumecs), and optionally a quality code}

\item{hours}{a positive integer of the number of hours to average over}

\item{discardbelowzero}{Where a number below zero is illogical, omit. Recommend leaving as default (FALSE)}

\item{centred}{bias the result towards the centre, not found to be useful for tides at least}

\item{type}{"spinterp", "spline"}
}
\value{
dataframe with timestamp as posixct a trapezoidal integrated rate and quality code if included.
}
\description{
Derivative of overlapping trapezoidally integrated datasets
# function(ts, hours = 24, discardbelowzero = FALSE, centred = FALSE, type="spinterp")
}
\details{
Useful for detiding or denoising of data
The overlapping averaging windows allow multiple recalculations of the same data
Which provides an estimate of the uncertainty in applying the filter
}
\examples{
data(xy_data)
D <- within(xy_data, {
  x <- as.POSIXct(x * 60 * 60 * 24, origin = "1970-01-01")
})

plot(D)

stopifnot(require(matrixStats))

# as a tidal filter
spinterpData <- ccInterpFilter(D, 24, centred = FALSE)
lines(spinterpData$Date, spinterpData$avg, col = "red")

# 95\% confidence
stdev <- rowSds(as.matrix(spinterpData[2:(length(spinterpData) - 1)]))
spinterpConfi <- data.frame(spinterpData$Date, spinterpData$avg)
spinterpConfi <- cbind(spinterpConfi, upper = spinterpData$avg + stdev)
spinterpConfi <- cbind(spinterpConfi, lower = spinterpData$avg - stdev)

lines(spinterpConfi$spinterpData.Date, spinterpConfi$upper)
lines(spinterpConfi$spinterpData.Date, spinterpConfi$lower)

# as a noise removing filter
# keep tide but smooth
spinterpData <- ccInterpFilter(D, 2, centred = FALSE)
plot(D[50:100, ])
lines(spinterpData$Date, spinterpData$avg, col = "red")


# 95\% confidence
stdev <- rowSds(as.matrix(spinterpData[2:(length(spinterpData) - 1)]))
spinterpConfi <- data.frame(spinterpData$Date, spinterpData$avg)
spinterpConfi <- cbind(spinterpConfi, upper = spinterpData$avg + stdev)
spinterpConfi <- cbind(spinterpConfi, lower = spinterpData$avg - stdev)

lines(spinterpConfi$spinterpData.Date, spinterpConfi$upper)
lines(spinterpConfi$spinterpData.Date, spinterpConfi$lower)

}
